# Set source files
set(WWPHYS_SRC
    accessiblephys.cpp
    animcollisionmanager.cpp
    bpt.cpp
    camerashakesystem.cpp
    decophys.cpp
    dynamicaabtreecull.cpp
    dynamicanimphys.cpp
    dynamicphys.cpp
    dynamicshadowmanager.cpp
    dyntexproject.cpp
    floodfillbox.cpp
    floodfillgrid.cpp
    grideffect.cpp
    heightdb.cpp
    humanphys.cpp
    lightcull.cpp
    lightphys.cpp
    lightsolve.cpp
    lightsolvecontext.cpp
    materialeffect.cpp
    motorcycle.cpp
    motorvehicle.cpp
    movephys.cpp
    octbox.cpp
    Path.cpp
    PathDebugPlotter.cpp
    Pathfind.cpp
    pathfindbox.cpp
    PathfindPortal.cpp
    PathfindSector.cpp
    pathmgr.cpp
    pathnode.cpp
    PathObject.cpp
    pathsolve.cpp
    phys.cpp
    phys3.cpp
    physaabtreecull.cpp
    physcon.cpp
    physcontrol.cpp
    physdecalsys.cpp
    physdynamicsavesystem.cpp
    physgridcull.cpp
    physresourcemgr.cpp
    physstaticsavesystem.cpp
    phystexproject.cpp
    progcall.cpp
    projectile.cpp
    projectormanager.cpp
    pscene.cpp
    pscene_collision.cpp
    pscene_decal.cpp
    pscene_lighting.cpp
    pscene_projectors.cpp
    pscene_saveload.cpp
    pscene_vis.cpp
    rbody.cpp
    rbody_obsolete.cpp
    renderobjphys.cpp
    renegadeterrainmaterialpass.cpp
    renegadeterrainpatch.cpp
    ridermanager.cpp
    shakeablestaticphys.cpp
    staticaabtreecull.cpp
    staticanimphys.cpp
    staticphys.cpp
    stealtheffect.cpp
    terrainmaterial.cpp
    timeddecophys.cpp
    trackedvehicle.cpp
    transitioneffect.cpp
    umbrasupport.cpp
    vehicledazzle.cpp
    vehiclephys.cpp
    visoptimizationcontext.cpp
    visoptprogress.cpp
    visrendercontext.cpp
    vissample.cpp
    vissectorstats.cpp
    vistable.cpp
    vistablemgr.cpp
    vtolvehicle.cpp
    waypath.cpp
    waypoint.cpp
    wheel.cpp
    wheelvehicle.cpp
    wwphys.cpp
    accessiblephys.h
    animcollisionmanager.h
    bpt.h
    camerashakesystem.h
    cloud.h
    decophys.h
    dynamicaabtreecull.h
    dynamicanimphys.h
    dynamicphys.h
    dynamicshadowmanager.h
    dyntexproject.h
    floodfillbox.h
    floodfillgrid.h
    grideffect.h
    heightdb.h
    humanphys.h
    lightcull.h
    lightexclude.h
    lightphys.h
    lightsolve.h
    lightsolvecontext.h
    lightsolveprogress.h
    materialeffect.h
    materialeffectlist.h
    motorcycle.h
    motorvehicle.h
    movephys.h
    octbox.h
    Path.h
    PathDebugPlotter.h
    Pathfind.h
    pathfindbox.h
    PathfindPortal.h
    PathfindSector.h
    pathmgr.h
    PathNode.h
    PathObject.h
    pathsolve.h
    phunits.h
    phys.h
    phys3.h
    physaabtreecull.h
    physcoltest.h
    physcon.h
    physcontrol.h
    physdecalsys.h
    physdynamicsavesystem.h
    physgridcull.h
    physinttest.h
    physlist.h
    physobserver.h
    physresourcemgr.h
    physstaticsavesystem.h
    phystexproject.h
    progcall.h
    projectile.h
    projectormanager.h
    pscene.h
    rbody.h
    renderobjphys.h
    renegadeterrainmaterialpass.h
    renegadeterrainpatch.h
    ridermanager.h
    shakeablestaticphys.h
    staticaabtreecull.h
    staticanimphys.h
    staticphys.h
    stealtheffect.h
    terrainmaterial.h
    timeddecophys.h
    trackedvehicle.h
    transitioneffect.h
    umbrasupport.h
    vehicledazzle.h
    vehiclephys.h
    visenum.h
    visoptimizationcontext.h
    visoptprogress.h
    visrendercontext.h
    vissample.h
    vissectorstats.h
    vistable.h
    vistablemgr.h
    vtolvehicle.h
    waypath.h
    waypathposition.h
    waypoint.h
    wheel.h
    wheelvehicle.h
    wwphys.h
    wwphysids.h
    wwphystrig.h
    zone.h
    bin_aabox.cpp
    bin_aabox.h
    bin_axes.cpp
    bin_axes.h
    bin_obbox.cpp
    bin_obbox.h
    bin_point.cpp
    bin_point.h
    bin_vector.cpp
    bin_vector.h
    widgets.cpp
    widgets.h
    widgetuser.cpp
    widgetuser.h
)

# Targets to build.
add_library(wwphys STATIC)

target_link_libraries(wwphys PRIVATE
    wwcommon
    ww3d2
)

target_sources(wwphys PRIVATE ${WWPHYS_SRC})

# This module needs building differently for the level editor
if (RENEGADE_TOOLS)
    # Targets to build.
    add_library(wwphyse STATIC)

    target_link_libraries(wwphyse PRIVATE
        wwcommon
    )

    target_compile_definitions(wwphyse PRIVATE PARAM_EDITING_ON)

    target_sources(wwphyse PRIVATE ${WWPHYS_SRC})
endif()
