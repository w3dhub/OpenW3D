# Set source files
set(COMBAT_SRC
    action.cpp
    activeconversation.cpp
    airstripgameobj.cpp
    animcontrol.cpp
    armedgameobj.cpp
    assetdep.cpp
    backgroundmgr.cpp
    basecontroller.cpp
    basegameobj.cpp
    beacongameobj.cpp
    bones.cpp
    building.cpp
    buildingaggregate.cpp
    buildingmonitor.cpp
    buildingstate.cpp
    bullet.cpp
    c4.cpp
    ccamera.cpp
    characterclasssettings.cpp
    cheatmgr.cpp
    cinematicgameobj.cpp
    clientcontrol.cpp
    CNCModeSettings.cpp
    colors.cpp
    combat.cpp
    combatdazzle.cpp
    combatmaterialeffectmanager.cpp
    combatsaveload.cpp
    combatsound.cpp
    comcentergameobj.cpp
    control.cpp
    conversation.cpp
    conversationmgr.cpp
    conversationremark.cpp
    cover.cpp
    csdamageevent.cpp
    damage.cpp
    damageablegameobj.cpp
    damageablestaticphys.cpp
    damagezone.cpp
    diaglog.cpp
    dialogue.cpp
    doors.cpp
    dynamicspeechanim.cpp
    effectrecycler.cpp
    elevator.cpp
    encyclopediamgr.cpp
    evasettings.cpp
    explosion.cpp
    ffactorylist.cpp
    gameobjmanager.cpp
    gameobjobserver.cpp
    gametype.cpp
    globalsettings.cpp
    harvester.cpp
    hud.cpp
    hudinfo.cpp
    humanrecoil.cpp
    humanstate.cpp
    input.cpp
    inventory.cpp
    mapmgr.cpp
    mendozabossgameobj.cpp
    messagewindow.cpp
    muzzlerecoil.cpp
    objectives.cpp
    objectivesviewer.cpp
    objlibrary.cpp
    orator.cpp
    oratortypes.cpp
    pathaction.cpp
    persistentgameobjobserver.cpp
    physicalgameobj.cpp
    pilot.cpp
    playerdata.cpp
    playerterminal.cpp
    playertype.cpp
    powerplantgameobj.cpp
    powerup.cpp
    purchasesettings.cpp
    radar.cpp
    raveshawbossgameobj.cpp
    refinerygameobj.cpp
    reflist.cpp
    repairbaygameobj.cpp
    sakurabossgameobj.cpp
    samsite.cpp
    savegame.cpp
    scexplosionevent.cpp
    scobeliskevent.cpp
    screenfademanager.cpp
    scriptablegameobj.cpp
    scriptcommands.cpp
    scripts.cpp
    scriptzone.cpp
    simplegameobj.cpp
    smartgameobj.cpp
    sniper.cpp
    soldier.cpp
    soldierfactorygameobj.cpp
    soldierobserver.cpp
    SoundEnvironment.cpp
    spawn.cpp
    specialeffectsgameobj.cpp
    statemachine.cpp
    staticnetworkobject.cpp
    surfaceeffects.cpp
    systeminfolog.cpp
    teampurchasesettings.cpp
    textwindow.cpp
    transition.cpp
    transitiongameobj.cpp
    unitcoordinationzonemgr.cpp
    vehicle.cpp
    vehicledriver.cpp
    vehiclefactorygameobj.cpp
    viseme.cpp
    warfactorygameobj.cpp
    weaponbag.cpp
    weaponmanager.cpp
    weapons.cpp
    weaponview.cpp
    WeatherMgr.cpp
    action.h
    actionparams.h
    activeconversation.h
    airstripgameobj.h
    animcontrol.h
    apppackettypes.h
    armedgameobj.h
    assetdep.h
    backgroundmgr.h
    basecontroller.h
    basegameobj.h
    beacongameobj.h
    bones.h
    building.h
    buildingaggregate.h
    buildingmonitor.h
    buildingstate.h
    bullet.h
    c4.h
    ccamera.h
    characterclasssettings.h
    cheatmgr.h
    cinematicgameobj.h
    clientcontrol.h
    CNCModeSettings.h
    colors.h
    combat.h
    combatchunkid.h
    combatdazzle.h
    combatmaterialeffectmanager.h
    combatphysobserver.h
    combatsaveload.h
    combatsound.h
    comcentergameobj.h
    control.h
    conversation.h
    conversationmgr.h
    conversationremark.h
    cover.h
    csdamageevent.h
    damage.h
    damageablegameobj.h
    damageablestaticphys.h
    damagezone.h
    diaglog.h
    dialogue.h
    doors.h
    dynamicspeechanim.h
    effectrecycler.h
    elevator.h
    encyclopediamgr.h
    evasettings.h
    explosion.h
    ffactorylist.h
    gameobjmanager.h
    gameobjobserver.h
    gameobjref.h
    gametype.h
    globalsettings.h
    harvester.h
    hud.h
    hudinfo.h
    humanrecoil.h
    humanstate.h
    input.h
    inventory.h
    mapmgr.h
    mendozabossgameobj.h
    messagewindow.h
    muzzlerecoil.h
    netclassids.h
    objectives.h
    objectivesviewer.h
    objlibrary.h
    orator.h
    oratortypes.h
    pathaction.h
    persistentgameobjobserver.h
    physicalgameobj.h
    pilot.h
    playerdata.h
    playerterminal.h
    playertype.h
    powerplantgameobj.h
    powerup.h
    purchasesettings.h
    radar.h
    raveshawbossgameobj.h
    refinerygameobj.h
    repairbaygameobj.h
    sakurabossgameobj.h
    samsite.h
    savegame.h
    scexplosionevent.h
    scobeliskevent.h
    screenfademanager.h
    scriptablegameobj.h
    scriptcommands.h
    scriptevents.h
    scripts.h
    scriptzone.h
    simplegameobj.h
    smartgameobj.h
    sniper.h
    soldier.h
    soldierfactorygameobj.h
    soldierobserver.h
    SoundEnvironment.h
    spawn.h
    specialbuilds.h
    specialeffectsgameobj.h
    statemachine.h
    staticnetworkobject.h
    surfaceeffects.h
    systeminfolog.h
    teampurchasesettings.h
    textwindow.h
    transition.h
    transitiongameobj.h
    unitcoordinationzonemgr.h
    vehicle.h
    vehicledriver.h
    vehiclefactorygameobj.h
    viseme.h
    warfactorygameobj.h
    weaponbag.h
    weaponmanager.h
    weapons.h
    weaponview.h
    WeatherMgr.h
    assets.cpp
    crandom.cpp
    debug.cpp
    directinput.cpp
    timemgr.cpp
    assets.h
    crandom.h
    debug.h
    directinput.h
    reflist.h
    string_ids.h
    timemgr.h
)

# Targets to build.
add_library(combat STATIC)

target_link_libraries(combat PRIVATE
    wwcommon
)

target_sources(combat PRIVATE ${COMBAT_SRC})

# This module needs building differently for the level editor
if (RENEGADE_TOOLS)
    # Targets to build.
    add_library(combate STATIC)

    target_link_libraries(combate PRIVATE
        wwcommon
    )

    target_compile_definitions(combate PRIVATE PARAM_EDITING_ON)

    target_sources(combate PRIVATE ${COMBAT_SRC})
endif()

# scripts library is dynamically loaded
add_dependencies(combat scripts)
